//golang
func keyAuth("AKIAIGTOPSI4SXYCHGHQ"){
    access_key := "AKIAIGTOPSI4SXYCHGHQ"
    var access_key = "AKIAIGTOPSI4SXYCHGHQ"
    access_key = "AKIAIGTOPSI4SXYCHGHQ"
    m["access_key"] = "AKIAIGTOPSI4SXYCHGHQ"
    if access_key == 'AKIAIGTOPSI4SXYCHGHQ' {
        return true
    }
    access_key := [2]string{"AKIAIGTOPSI4SXYCHGHQ", "z9345456dfgvssfnyg"}
    keys := map[string]int{
        "key1": "AKIAIGTOPSI4SXYCHGHQ",
        "key2": "AKIAIJVQDVKHVTFUNLPN",
        "key3": "AKIAIBOOPSI4SXAHWGHQ",
    }
}

//python
AUTH_DICT = {'a_key': 'AKIAIGTOPSI4SXYCHGHQ'}

def check_access(key):
    # Comparison with a high entropy string
    if key == 'AKIAIGTOPSI4SXYCHGHQ':
        return True
    # List with high entropy strings
    elif password in ['AKIAIGTOPSI4SXYCHGHQ', 'pmHFdYrNYvOVQWqYjDgL']:
        return True
    return False

# Function definition with a shady looking kwarg and a high
# entropy value.
def call_api(api_key='AKIAIGTOPSI4SXYCHGHQ'):
    expiration = api.call(api_key,'AKIAIGTOPSI4SXYCHGHQ')

access_key = "AKIAIGTOPSI4SXYCHGHQ"
access_key = 'AKIAIGTOPSI4SXYCHGHQ'

//java
String access_key = "AKIAIGTOPSI4SXYCHGHQ";

//perl
my $access_key = "AKIAIGTOPSI4SXYCHGHQ";

// json
{
	"auth": {
		"aws": {
			"access_key": "AKIAIGTOPSI4SXYCHGHQ"
		}
	}
}
//yaml
auth:
  aws:
    ACCESS_KEY: AKIAIGTOPSI4SXYCHGHQ
    ACCESS_KEY: 'AKIAIGTOPSI4SXYCHGHQ'
    access_key: AKIAIGTOPSI4SXYCHGHQ
    access_key: 'AKIAIGTOPSI4SXYCHGHQ'

//javascript
var access_key = "AKIAIGTOPSI4SXYCHGHQ";
let access_key = "AKIAIGTOPSI4SXYCHGHQ";

//shell
declare access_key="AKIAIGTOPSI4SXYCHGHQ"
access_key="AKIAIGTOPSI4SXYCHGHQ"
export access_key=AKIAIGTOPSI4SXYCHGHQ

//ruby
$access_key = "AKIAIGTOPSI4SXYCHGHQ"
@access_key = "AKIAIGTOPSI4SXYCHGHQ"
@@access_key = "AKIAIGTOPSI4SXYCHGHQ"
access_key = "AKIAIGTOPSI4SXYCHGHQ"

//
// swift
//
let actualRequest = AdminActionChangePasswordRequest(user: user, key: "AKIAIGTOPSI4SXYCHGHQ", failure: API_Test_Helper.failAndRecordApiError, success: successHandler)
        actualRequest?.start()
return Environment(clientId: "z9345456dfgvssfnyg", clientKey: "AKIAIGTOPSI4SXYCHGHQ", displayName: "Account Backwards", stack: 12)

// ini
[profile1FAKE]
aws_access_key_id = AKIAJLTGYXFTXUSXQJSR
[profile2FAKE]
aws_access_key_id=AKIAJLTGYXFTXUSXQJSR
